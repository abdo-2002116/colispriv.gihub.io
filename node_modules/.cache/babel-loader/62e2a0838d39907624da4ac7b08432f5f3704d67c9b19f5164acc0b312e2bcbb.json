{"ast":null,"code":"var _jsxFileName = \"/home/abdelkodouss/colisprive/colisprive/src/colisprive/particles.jsx\",\n  _s = $RefreshSig$();\nimport Particle from \"@tsparticles/engine\";\nimport { initParticlesEngine } from \"@tsparticles/react\";\nimport { useEffect, useMemo, useState } from \"react\";\n// import { loadAll } from \"@/tsparticles/all\"; // if you are going to use `loadAll`, install the \"@tsparticles/all\" package too.\n// import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\n\n// import { loadBasic } from \"@tsparticles/basic\"; // if you are going to use `loadBasic`, install the \"@tsparticles/basic\" package too.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticlesComponent = props => {\n  _s();\n  const [init, setInit] = useState(false);\n  // this should be run only once per application lifetime\n\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n  const options = useMemo(() => ({\n    background: {\n      color: {\n        value: \"#1E2F97\"\n      }\n    },\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        onClick: {\n          enable: true,\n          mode: \"repulse\"\n        },\n        onHover: {\n          enable: true,\n          mode: 'grab'\n        }\n      },\n      modes: {\n        push: {\n          distance: 200,\n          duration: 15\n        },\n        grab: {\n          distance: 150\n        }\n      }\n    },\n    Particle: {\n      color: {\n        value: \"#FFFFFF\"\n      },\n      links: {\n        color: \"#FFFFFF\",\n        distance: 150,\n        enable: true,\n        opacity: 0.3,\n        width: 1\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        outModes: {\n          default: \"bounce\"\n        },\n        random: true,\n        speed: 1,\n        straight: false\n      },\n      number: {\n        density: {\n          enable: true\n        },\n        value: 150\n      },\n      opacity: {\n        value: 1.0\n      },\n      shape: {\n        type: \"circle\"\n      },\n      size: {\n        value: {\n          min: 1,\n          max: 3\n        }\n      }\n    },\n    detectRetina: true\n  }), []);\n  return /*#__PURE__*/_jsxDEV(Particle, {\n    id: props.id,\n    init: particlesLoaded,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n};\n_s(ParticlesComponent, \"KJrhhAJi9xX3YTI0ymanUiXuiJg=\");\n_c = ParticlesComponent;\nexport default ParticlesComponent;\nvar _c;\n$RefreshReg$(_c, \"ParticlesComponent\");","map":{"version":3,"names":["Particle","initParticlesEngine","useEffect","useMemo","useState","jsxDEV","_jsxDEV","ParticlesComponent","props","_s","init","setInit","particlesLoaded","container","console","log","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","modes","push","distance","duration","grab","links","opacity","width","move","direction","outModes","default","random","speed","straight","number","density","shape","type","size","min","max","detectRetina","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abdelkodouss/colisprive/colisprive/src/colisprive/particles.jsx"],"sourcesContent":["\n\nimport Particle  from \"@tsparticles/engine\";\nimport { initParticlesEngine } from \"@tsparticles/react\";\nimport { useEffect, useMemo, useState } from \"react\";\n// import { loadAll } from \"@/tsparticles/all\"; // if you are going to use `loadAll`, install the \"@tsparticles/all\" package too.\n// import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\n\n// import { loadBasic } from \"@tsparticles/basic\"; // if you are going to use `loadBasic`, install the \"@tsparticles/basic\" package too.\n\n\n\nconst ParticlesComponent = (props) => {\n\n  const [init, setInit] = useState(false);\n  // this should be run only once per application lifetime\n\n\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n\n\n  const options = useMemo(\n    () => ({\n      background: {\n        color: {\n          value: \"#1E2F97\",\n        },\n      },\n      fpsLimit: 120,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"repulse\",\n          },\n          onHover: {\n            enable: true,\n            mode: 'grab',\n          },\n        },\n        modes: {\n          push: {\n            distance: 200,\n            duration: 15,\n          },\n          grab: {\n            distance: 150,\n          },\n        },\n      },\n      Particle: {\n        color: {\n          value: \"#FFFFFF\",\n        },\n        links: {\n          color: \"#FFFFFF\",\n          distance: 150,\n          enable: true,\n          opacity: 0.3,\n          width: 1,\n        },\n        move: {\n          direction: \"none\",\n          enable: true,\n          outModes: {\n            default: \"bounce\",\n          },\n          random: true,\n          speed: 1,\n          straight: false,\n        },\n        number: {\n          density: {\n            enable: true,\n          },\n          value: 150,\n        },\n        opacity: {\n          value: 1.0,\n        },\n        shape: {\n          type: \"circle\",\n        },\n        size: {\n          value: { min: 1, max: 3 },\n        },\n      },\n      detectRetina: true,\n    }),\n    [],\n  );\n\n\n  return <Particle id={props.id} init={particlesLoaded} options={options} />; \n};\n\nexport default ParticlesComponent;\n"],"mappings":";;AAEA,OAAOA,QAAQ,MAAO,qBAAqB;AAC3C,SAASC,mBAAmB,QAAQ,oBAAoB;AACxD,SAASC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACpD;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvC;;EAIA,MAAMQ,eAAe,GAAIC,SAAS,IAAK;IACrCC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EACxB,CAAC;EAGD,MAAMG,OAAO,GAAGb,OAAO,CACrB,OAAO;IACLc,UAAU,EAAE;MACVC,KAAK,EAAE;QACLC,KAAK,EAAE;MACT;IACF,CAAC;IACDC,QAAQ,EAAE,GAAG;IACbC,aAAa,EAAE;MACbC,MAAM,EAAE;QACNC,OAAO,EAAE;UACPC,MAAM,EAAE,IAAI;UACZC,IAAI,EAAE;QACR,CAAC;QACDC,OAAO,EAAE;UACPF,MAAM,EAAE,IAAI;UACZC,IAAI,EAAE;QACR;MACF,CAAC;MACDE,KAAK,EAAE;QACLC,IAAI,EAAE;UACJC,QAAQ,EAAE,GAAG;UACbC,QAAQ,EAAE;QACZ,CAAC;QACDC,IAAI,EAAE;UACJF,QAAQ,EAAE;QACZ;MACF;IACF,CAAC;IACD7B,QAAQ,EAAE;MACRkB,KAAK,EAAE;QACLC,KAAK,EAAE;MACT,CAAC;MACDa,KAAK,EAAE;QACLd,KAAK,EAAE,SAAS;QAChBW,QAAQ,EAAE,GAAG;QACbL,MAAM,EAAE,IAAI;QACZS,OAAO,EAAE,GAAG;QACZC,KAAK,EAAE;MACT,CAAC;MACDC,IAAI,EAAE;QACJC,SAAS,EAAE,MAAM;QACjBZ,MAAM,EAAE,IAAI;QACZa,QAAQ,EAAE;UACRC,OAAO,EAAE;QACX,CAAC;QACDC,MAAM,EAAE,IAAI;QACZC,KAAK,EAAE,CAAC;QACRC,QAAQ,EAAE;MACZ,CAAC;MACDC,MAAM,EAAE;QACNC,OAAO,EAAE;UACPnB,MAAM,EAAE;QACV,CAAC;QACDL,KAAK,EAAE;MACT,CAAC;MACDc,OAAO,EAAE;QACPd,KAAK,EAAE;MACT,CAAC;MACDyB,KAAK,EAAE;QACLC,IAAI,EAAE;MACR,CAAC;MACDC,IAAI,EAAE;QACJ3B,KAAK,EAAE;UAAE4B,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAE;MAC1B;IACF,CAAC;IACDC,YAAY,EAAE;EAChB,CAAC,CAAC,EACF,EACF,CAAC;EAGD,oBAAO3C,OAAA,CAACN,QAAQ;IAACkD,EAAE,EAAE1C,KAAK,CAAC0C,EAAG;IAACxC,IAAI,EAAEE,eAAgB;IAACI,OAAO,EAAEA;EAAQ;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5E,CAAC;AAAC7C,EAAA,CArFIF,kBAAkB;AAAAgD,EAAA,GAAlBhD,kBAAkB;AAuFxB,eAAeA,kBAAkB;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}