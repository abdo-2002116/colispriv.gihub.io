{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadSlim } from \"tsparticles-slim\"; // if you are going to use `loadSlim`, install the \"tsparticles-slim\" package too.\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParticlesComponent() {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    //await loadFull(engine);\n    await loadSlim(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(ParticlesComponent, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = ParticlesComponent;\n;\n;\nvar _c;\n$RefreshReg$(_c, \"ParticlesComponent\");","map":{"version":3,"names":["useCallback","Particles","loadSlim","Fragment","_Fragment","jsxDEV","_jsxDEV","ParticlesComponent","_s","particlesInit","engine","console","log","particlesLoaded","container","_c","$RefreshReg$"],"sources":["/home/abdelkodouss/colisprive/colisprive/src/colisprive/particles.jsx"],"sourcesContent":["\nimport { useCallback } from \"react\";\nimport Particles from \"react-tsparticles\";\n\n\nimport { loadSlim } from \"tsparticles-slim\"; // if you are going to use `loadSlim`, install the \"tsparticles-slim\" package too.\nexport default function ParticlesComponent(){\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    //await loadFull(engine);\n    await loadSlim(engine);\n}, []);\n\nconst particlesLoaded = useCallback(async container => {\n    await console.log(container);\n}, []);\n\n \n\n  return(<>\n\n  </>\n  )\n};\n\n ;\n"],"mappings":";AACA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,SAAS,MAAM,mBAAmB;AAGzC,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC7C,eAAe,SAASC,kBAAkBA,CAAA,EAAE;EAAAC,EAAA;EAC1C,MAAMC,aAAa,GAAGT,WAAW,CAAC,MAAMU,MAAM,IAAI;IAChDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB;IACA;IACA;IACA;IACA,MAAMR,QAAQ,CAACQ,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAGb,WAAW,CAAC,MAAMc,SAAS,IAAI;IACnD,MAAMH,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAIJ,oBAAOR,OAAA,CAAAF,SAAA,mBAEL,CAAC;AAEL;AAACI,EAAA,CApBuBD,kBAAkB;AAAAQ,EAAA,GAAlBR,kBAAkB;AAoBzC;AAEA;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}