{"ast":null,"code":"var _jsxFileName = \"/home/abdelkodouss/colisprive/colisprive/src/colisprive/particles.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ParticlesComponent() {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    //await loadFull(engine);\n    await loadSlim(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-screen gradient\",\n      children: /*#__PURE__*/_jsxDEV(Particles, {\n        id: \"tsparticles\",\n        url: \"http://foo.bar/particles.json\",\n        init: particlesInit,\n        loaded: particlesLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_s(ParticlesComponent, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = ParticlesComponent;\n;\nvar _c;\n$RefreshReg$(_c, \"ParticlesComponent\");","map":{"version":3,"names":["useCallback","Particles","loadSlim","jsxDEV","_jsxDEV","Fragment","_Fragment","ParticlesComponent","_s","particlesInit","engine","console","log","particlesLoaded","container","children","className","id","url","init","loaded","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abdelkodouss/colisprive/colisprive/src/colisprive/particles.jsx"],"sourcesContent":["import { useCallback } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadSlim } from \"tsparticles-slim\";\n\n\n\n\nexport default function ParticlesComponent(){\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    //await loadFull(engine);\n    await loadSlim(engine);\n}, []);\n\nconst particlesLoaded = useCallback(async container => {\n    await console.log(container);\n}, []);\n  return(<>\n  <div className=\"w-full h-screen gradient\">\n  <Particles id=\"tsparticles\" url=\"http://foo.bar/particles.json\" init={particlesInit} loaded={particlesLoaded} />\n  </div>\n\n  </>\n  )\n};\n\n \n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAK5C,eAAe,SAASC,kBAAkBA,CAAA,EAAE;EAAAC,EAAA;EAC1C,MAAMC,aAAa,GAAGT,WAAW,CAAC,MAAMU,MAAM,IAAI;IAChDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB;IACA;IACA;IACA;IACA,MAAMR,QAAQ,CAACQ,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAGb,WAAW,CAAC,MAAMc,SAAS,IAAI;IACnD,MAAMH,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EACJ,oBAAOV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACPX,OAAA;MAAKY,SAAS,EAAC,0BAA0B;MAAAD,QAAA,eACzCX,OAAA,CAACH,SAAS;QAACgB,EAAE,EAAC,aAAa;QAACC,GAAG,EAAC,+BAA+B;QAACC,IAAI,EAAEV,aAAc;QAACW,MAAM,EAAEP;MAAgB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3G;EAAC,gBAEJ,CAAC;AAEL;AAAChB,EAAA,CApBuBD,kBAAkB;AAAAkB,EAAA,GAAlBlB,kBAAkB;AAoBzC;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}